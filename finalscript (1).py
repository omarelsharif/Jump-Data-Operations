# -*- coding: utf-8 -*-
"""FinalScript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vRbk3MbAi1qpDsvjHmeQ9biXo9kAgc_N
"""

#Omar El-Sharif
#This file was written in Python, on Google Colaboratory to ensure that regardless of the Python version you have, or the device you're using, 
#you are able to access it. If you'd like to run / edit the code yourself, simply place this file and the Excel sheet into a Google Drive folder.
#Then, right click the file and when you see the 'Open With' option, click on Google Colaboratory.
#Download Google Colaboratory (this takes <30 seconds) if needed
#If you have any issues, you can try pasting the importdata function outside of the class, and running it first
#You can then edit the line ('/content/drive/MyDrive/biodata/jumpdata.xlsx'), to reference the path that you have the Excel sheet placed in
#Ie: You can delete the word biodata, and change it with your folder name, and delete the word jumpdata, and change it with your Excel sheet's name.

#Please do not hesitate to reach out if you have any questions about the code, need help with Google Colaboratory, or any other questions you have!
#Best Regards, Omar El-Sharif

class long_jumper:
  distances = []   #List of distances
  def __init__(self): 
        pass

  def importdata(self): #Importing data from the Excel file in Google drive
    from google.colab import drive
    drive.mount ('/content/drive')
    import pandas as pd
    df = pd.read_excel('/content/drive/MyDrive/biodata/jumpdata.xlsx')
    namelist = [] #Initializing empty lists to store the names and means 
    meanlist = []
    for column in df: #Appending the names and means to the lists initialized above
        namelist.append(df[column].name)
        meanlist.append(df[column].mean().round(2))

  def create_df2(self): #Creating a second DataFrame to store the means and names extracted from the first DataFrame
    df2 = pd.DataFrame(list(zip(namelist, meanlist)), columns = ['Name', 'Mean'])
  
  def graphdata(self): #Graphing the values in the second DataFrame created above
    import seaborn as sns
    import matplotlib.pyplot as plt
    ax = sns.barplot(data=df2, x="Name", y="Mean")
    ax.set(xlabel='Jumper Name', 
          ylabel='Average Long Jump Height (In Feet)',
          title=' Average Long Jump Distances')
    plt.show()

  def __repr__(self) -> str:
        pass

  def add_distance(self,distance):
      self.distance = distance
      # Add the instance to the distances list
      self.distances.append(self)

  def get_distance(self):
      pass

me = long_jumper() #Creating a variable that makes reference to the class for easier and more clean written references to the class
me #Calling the class and the various functions (methods) within it
me.importdata()
me.create_df2()
me.graphdata()
me.add_distance(5.3)
me.add_distance(5.5)